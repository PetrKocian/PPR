; Listing generated by Microsoft (R) Optimizing Compiler Version 19.20.27508.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__23AD7809_corecrt_stdio_config@h DB 01H
__DD74D44A_corecrt_wstdio@h DB 01H
__4B3541EE_stdio@h DB 01H
__82CA083D_corecrt_memcpy_s@h DB 01H
__990BA27D_corecrt_wconio@h DB 01H
__D837D19F_corecrt_wio@h DB 01H
__61E6ED1F_corecrt_wstring@h DB 01H
__FE12CC83_corecrt_wtime@h DB 01H
__01EE68DC_stat@h DB 01H
__B513A213_wchar@h DB 01H
__D2B1624D_cstddef DB 01H
__E410F33D_corecrt_math@h DB 01H
__36B85FDF_stdlib@h DB 01H
__777AB8E0_cstdlib DB 01H
__FC3EA1F0_limits DB 01H
__07CA4ED5_type_traits DB 01H
__04DFDC37_ratio DB 01H
__03F544F8_vcruntime_new@h DB 01H
__B62FE6C9_time@h DB 01H
__98D3A77A_chrono DB 01H
__9356E8BC_timer@h DB 01H
__95CEFF83_timer@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
PUBLIC	?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero
PUBLIC	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
PUBLIC	?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count
PUBLIC	?start@Timer@@QEAAXXZ				; Timer::start
PUBLIC	?end@Timer@@QEAAXXZ				; Timer::end
PUBLIC	?clear@Timer@@QEAAXXZ				; Timer::clear
PUBLIC	?get_time@Timer@@QEBAHXZ			; Timer::get_time
PUBLIC	?get_time_ms@Timer@@QEBAHXZ			; Timer::get_time_ms
PUBLIC	??0Timer@@QEAA@XZ				; Timer::Timer
PUBLIC	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	?zero@?$duration_values@_J@chrono@std@@SA_JXZ	; std::chrono::duration_values<__int64>::zero
PUBLIC	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
PUBLIC	__JustMyCode_Default
EXTRN	_Query_perf_counter:PROC
EXTRN	_Query_perf_frequency:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
?t@@3VTimer@@A DB 018H DUP (?)				; t
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+211
	DD	imagerel $unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?start@Timer@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?start@Timer@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@Timer@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+206
	DD	imagerel $unwind$?end@Timer@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@Timer@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?clear@Timer@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_time@Timer@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?get_time@Timer@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_time_ms@Timer@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?get_time_ms@Timer@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Timer@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??0Timer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Et@@YAXXZ DD imagerel ??__Et@@YAXXZ
	DD	imagerel ??__Et@@YAXXZ+64
	DD	imagerel $unwind$??__Et@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+439
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?zero@?$duration_values@_J@chrono@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?zero@?$duration_values@_J@chrono@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD imagerel $LN3
	DD	imagerel $LN3+185
	DD	imagerel $unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
CRT$XCU	SEGMENT
?t$initializer$@@3P6AXXZEA DQ FLAT:??__Et@@YAXXZ	; t$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD 025053401H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?zero@?$duration_values@_J@chrono@std@@SA_JXZ DD imagerel ?zero@?$duration_values@_J@chrono@std@@SA_JXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?zero@?$duration_values@_J@chrono@std@@SA_JXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?zero@?$duration_values@_J@chrono@std@@SA_JXZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?zero@?$duration_values@_J@chrono@std@@SA_JXZ DD 025052919H
	DD	010a230fH
	DD	070030021H
	DD	05002H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?zero@?$duration_values@_J@chrono@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c005bH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 025053401H
	DD	0118231dH
	DD	070110027H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Et@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Timer@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_time_ms@Timer@@QEBAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_time@Timer@@QEBAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@Timer@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@Timer@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?end@Timer@@QEAAXXZ$rtcName$0 DB 074H			; Timer::end
	DB	065H
	DB	06dH
	DB	070H
	DB	05fH
	DB	074H
	DB	069H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+6
?end@Timer@@QEAAXXZ$rtcVarDesc DD 028H			; Timer::end
	DD	08H
	DQ	FLAT:?end@Timer@@QEAAXXZ$rtcName$0
	ORG $+48
?end@Timer@@QEAAXXZ$rtcFrameData DD 01H			; Timer::end
	DD	00H
	DQ	FLAT:?end@Timer@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?start@Timer@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ DD imagerel ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ DD imagerel ?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ
	DD	0108H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ DD 025053519H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD imagerel ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
	DD	01a8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD 025053519H
	DD	010e2313H
	DD	070070039H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>, COMDAT

; 76   :             : _MyRep(static_cast<_Rep>(_Val)) { // construct from representation

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 77   :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
tv68 = 280
__$ReturnUdt$ = 320
_Left$ = 328
_Right$ = 336
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 247  :         const duration<_Rep1, _Period1>& _Left, const duration<_Rep2, _Period2>& _Right) { // subtract two durations

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode

; 248  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 249  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T2[rbp], rax
	mov	rax, QWORD PTR _Right$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T3[rbp], rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR tv68[rbp], rax
	lea	rcx, QWORD PTR $T3[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	rcx, QWORD PTR tv68[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 250  :     }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ENDP ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ?zero@?$duration_values@_J@chrono@std@@SA_JXZ
_TEXT	SEGMENT
$T1 = 200
?zero@?$duration_values@_J@chrono@std@@SA_JXZ PROC	; std::chrono::duration_values<__int64>::zero, COMDAT

; 32   :         _NODISCARD static constexpr _Rep zero() noexcept { // Strengthened, P0972

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode
	npad	1

; 33   :             // get zero value
; 34   :             return _Rep(0);

	xor	eax, eax

; 35   :         }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?zero@?$duration_values@_J@chrono@std@@SA_JXZ ENDP	; std::chrono::duration_values<__int64>::zero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
$T5 = 392
$T6 = 424
$T7 = 456
$T8 = 488
$T9 = 520
$T10 = 552
$T11 = 584
$T12 = 616
$T13 = 648
tv93 = 664
tv90 = 672
tv87 = 680
__$ReturnUdt$ = 720
_Dur$ = 728
??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>, COMDAT

; 364  :         const duration<_Rep, _Period>& _Dur) { // convert duration to another duration; truncate

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 728				; 000002d8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+760]
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode

; 365  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 366  : 
; 367  :         using _ToRep = typename _To::rep;
; 368  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 369  : 
; 370  :         constexpr bool _Num_is_one = _CF::num == 1;

	mov	BYTE PTR _Num_is_one$[rbp], 1

; 371  :         constexpr bool _Den_is_one = _CF::den == 1;

	mov	BYTE PTR _Den_is_one$[rbp], 0

; 372  :         return _Num_is_one && _Den_is_one

	xor	eax, eax
	test	eax, eax
	je	SHORT $LN7@duration_c
	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR $T3[rbp], rax
	lea	rdx, QWORD PTR $T3[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
	mov	QWORD PTR tv93[rbp], rax
	jmp	$LN8@duration_c
$LN7@duration_c:
	xor	eax, eax
	test	eax, eax
	je	SHORT $LN5@duration_c
	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	mov	QWORD PTR $T7[rbp], rax
	lea	rdx, QWORD PTR $T7[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
	mov	QWORD PTR tv90[rbp], rax
	jmp	$LN6@duration_c
$LN5@duration_c:
	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN3@duration_c
	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	rcx
	mov	QWORD PTR $T11[rbp], rax
	lea	rdx, QWORD PTR $T11[rbp]
	lea	rcx, QWORD PTR $T10[rbp]
	call	??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
	mov	QWORD PTR tv87[rbp], rax
	jmp	SHORT $LN4@duration_c
$LN3@duration_c:
	mov	rcx, QWORD PTR _Dur$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	rcx
	mov	QWORD PTR $T13[rbp], rax
	lea	rdx, QWORD PTR $T13[rbp]
	lea	rcx, QWORD PTR $T12[rbp]
	call	??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
	mov	QWORD PTR tv87[rbp], rax
$LN4@duration_c:
	mov	rax, QWORD PTR tv87[rbp]
	mov	QWORD PTR $T9[rbp], rax
	mov	rax, QWORD PTR $T9[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T8[rbp], rax
	lea	rax, QWORD PTR $T8[rbp]
	mov	QWORD PTR tv90[rbp], rax
$LN6@duration_c:
	mov	rax, QWORD PTR tv90[rbp]
	mov	QWORD PTR $T5[rbp], rax
	mov	rax, QWORD PTR $T5[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T4[rbp], rax
	lea	rax, QWORD PTR $T4[rbp]
	mov	QWORD PTR tv93[rbp], rax
$LN8@duration_c:
	mov	rax, QWORD PTR tv93[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 373  :                    ? static_cast<_To>(static_cast<_ToRep>(_Dur.count()))
; 374  :                    : !_Num_is_one && _Den_is_one
; 375  :                          ? static_cast<_To>(
; 376  :                                static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)))
; 377  :                          : _Num_is_one && !_Den_is_one
; 378  :                                ? static_cast<_To>(
; 379  :                                      static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)))
; 380  :                                : static_cast<_To>(
; 381  :                                      static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)
; 382  :                                                          / static_cast<_CR>(_CF::den)));
; 383  :     }

	lea	rsp, QWORD PTR [rbp+696]
	pop	rdi
	pop	rbp
	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv77 = 248
tv75 = 256
__$ReturnUdt$ = 304
_Left$ = 312
_Right$ = 320
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 474  :         const time_point<_Clock, _Duration2>& _Right) { // add time_point to time_point

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+344]
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode

; 475  :         return _Left.time_since_epoch() - _Right.time_since_epoch();

	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
	mov	QWORD PTR tv77[rbp], rax
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	call	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
	mov	QWORD PTR tv75[rbp], rax
	mov	r8, QWORD PTR tv77[rbp]
	mov	rdx, QWORD PTR tv75[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 476  :     }

	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\timer.h
;	COMDAT ??__Et@@YAXXZ
text$di	SEGMENT
??__Et@@YAXXZ PROC					; `dynamic initializer for 't'', COMDAT

; 19   : static Timer t;

	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__9356E8BC_timer@h
	call	__CheckForDebuggerJustMyCode
	lea	rcx, OFFSET FLAT:?t@@3VTimer@@A
	call	??0Timer@@QEAA@XZ
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??__Et@@YAXXZ ENDP					; `dynamic initializer for 't''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Timer@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0Timer@@QEAA@XZ PROC					; Timer::Timer, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0Timer@@QEAA@XZ ENDP					; Timer::Timer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\timer.cpp
;	COMDAT ?get_time_ms@Timer@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?get_time_ms@Timer@@QEBAHXZ PROC			; Timer::get_time_ms, COMDAT

; 26   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__95CEFF83_timer@cpp
	call	__CheckForDebuggerJustMyCode

; 27   : 	return time / 1000;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	rcx

; 28   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?get_time_ms@Timer@@QEBAHXZ ENDP			; Timer::get_time_ms
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\timer.cpp
;	COMDAT ?get_time@Timer@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?get_time@Timer@@QEBAHXZ PROC				; Timer::get_time, COMDAT

; 21   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__95CEFF83_timer@cpp
	call	__CheckForDebuggerJustMyCode

; 22   : 	return time;

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]

; 23   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?get_time@Timer@@QEBAHXZ ENDP				; Timer::get_time
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\timer.cpp
;	COMDAT ?clear@Timer@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@Timer@@QEAAXXZ PROC				; Timer::clear, COMDAT

; 4    : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__95CEFF83_timer@cpp
	call	__CheckForDebuggerJustMyCode

; 5    : 	time = 0;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0

; 6    : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@Timer@@QEAAXXZ ENDP				; Timer::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\timer.cpp
;	COMDAT ?end@Timer@@QEAAXXZ
_TEXT	SEGMENT
temp_time$ = 8
$T4 = 232
$T5 = 264
__$ArrayPad$ = 280
this$ = 320
?end@Timer@@QEAAXXZ PROC				; Timer::end, COMDAT

; 14   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__95CEFF83_timer@cpp
	call	__CheckForDebuggerJustMyCode

; 15   : 	end_value = std::chrono::high_resolution_clock::now();

	lea	rcx, QWORD PTR $T4[rbp]
	call	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax

; 16   : 	auto temp_time = std::chrono::duration_cast<std::chrono::microseconds>(end_value - start_value);

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T5[rbp]
	call	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	mov	rdx, rax
	lea	rcx, QWORD PTR temp_time$[rbp]
	call	??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>

; 17   : 	time = temp_time.count();

	lea	rcx, QWORD PTR temp_time$[rbp]
	call	?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+16], rax

; 18   : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?end@Timer@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?end@Timer@@QEAAXXZ ENDP				; Timer::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\timer.cpp
;	COMDAT ?start@Timer@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?start@Timer@@QEAAXXZ PROC				; Timer::start, COMDAT

; 9    : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__95CEFF83_timer@cpp
	call	__CheckForDebuggerJustMyCode

; 10   : 	start_value = std::chrono::high_resolution_clock::now();

	lea	rcx, QWORD PTR $T1[rbp]
	call	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax

; 11   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?start@Timer@@QEAAXXZ ENDP				; Timer::start
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count, COMDAT

; 87   :         _NODISCARD constexpr _Rep count() const { // get stored rep

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode

; 88   :             return _MyRep;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]

; 89   :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>, COMDAT

; 76   :             : _MyRep(static_cast<_Rep>(_Val)) { // construct from representation

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 77   :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch, COMDAT

; 187  :         _NODISCARD constexpr _Duration time_since_epoch() const { // get duration from epoch

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode

; 188  :             return _MyDur;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 189  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 179  :         constexpr explicit time_point(const _Duration& _Other) : _MyDur(_Other) { // construct from a duration

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR _Other$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax

; 180  :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\timer.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
; File C:\Users\Petr\Desktop\PPR\src\utils\timer.h
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 19   : static Timer t;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	QWORD PTR $T1[rbp], -2
	lea	rcx, OFFSET FLAT:__9356E8BC_timer@h
	call	__CheckForDebuggerJustMyCode
	npad	1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono

; 212  :         _Duration _MyDur{duration::zero()}; // duration since the epoch

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero
	npad	1
; File C:\Users\Petr\Desktop\PPR\src\utils\timer.h

; 19   : static Timer t;

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@XZ ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
__$ReturnUdt$ = 288
?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero, COMDAT

; 147  :         _NODISCARD static constexpr duration zero() noexcept { // Strengthened, P0972

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	QWORD PTR $T2[rbp], -2
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode
	npad	1

; 148  :             // get zero value
; 149  :             return duration(duration_values<_Rep>::zero());

	call	?zero@?$duration_values@_J@chrono@std@@SA_JXZ ; std::chrono::duration_values<__int64>::zero
	npad	1
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
	npad	1
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 150  :         }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?zero@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@SA?AV123@XZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::zero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count, COMDAT

; 87   :         _NODISCARD constexpr _Rep count() const { // get stored rep

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode

; 88   :             return _MyRep;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]

; 89   :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono
;	COMDAT ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
_TEXT	SEGMENT
_Freq$ = 8
_Ctr$ = 40
_Whole$ = 72
_Part$ = 104
$T1 = 328
$T2 = 360
$T3 = 392
__$ReturnUdt$ = 448
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ PROC ; std::chrono::steady_clock::now, COMDAT

; 574  :         _NODISCARD static time_point now() noexcept { // get current time

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 456				; 000001c8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+488]
	mov	QWORD PTR $T3[rbp], -2
	lea	rcx, OFFSET FLAT:__98D3A77A_chrono
	call	__CheckForDebuggerJustMyCode
	npad	1

; 575  :             const long long _Freq = _Query_perf_frequency(); // doesn't change after system boot

	call	_Query_perf_frequency
	npad	1
	mov	QWORD PTR _Freq$[rbp], rax

; 576  :             const long long _Ctr  = _Query_perf_counter();

	call	_Query_perf_counter
	npad	1
	mov	QWORD PTR _Ctr$[rbp], rax

; 577  :             static_assert(period::num == 1, "This assumes period::num == 1.");
; 578  :             const long long _Whole = (_Ctr / _Freq) * period::den;

	mov	rax, QWORD PTR _Ctr$[rbp]
	cdq
	idiv	QWORD PTR _Freq$[rbp]
	imul	rax, rax, 1000000000			; 3b9aca00H
	mov	QWORD PTR _Whole$[rbp], rax

; 579  :             const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

	mov	rax, QWORD PTR _Ctr$[rbp]
	cdq
	idiv	QWORD PTR _Freq$[rbp]
	mov	rax, rdx
	imul	rax, rax, 1000000000			; 3b9aca00H
	cdq
	idiv	QWORD PTR _Freq$[rbp]
	mov	QWORD PTR _Part$[rbp], rax

; 580  :             return time_point(duration(_Whole + _Part));

	mov	rax, QWORD PTR _Part$[rbp]
	mov	rcx, QWORD PTR _Whole$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T2[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
	npad	1
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	npad	1
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 581  :         }

	lea	rsp, QWORD PTR [rbp+424]
	pop	rdi
	pop	rbp
	ret	0
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ENDP ; std::chrono::steady_clock::now
_TEXT	ENDS
END
