; Listing generated by Microsoft (R) Optimizing Compiler Version 19.20.27508.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__03F544F8_vcruntime_new@h DB 01H
__E410F33D_corecrt_math@h DB 01H
__36B85FDF_stdlib@h DB 01H
__777AB8E0_cstdlib DB 01H
__686C4599_cmath DB 01H
__245B244A_stats@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?clear@Stats@@QEAAXXZ				; Stats::clear
PUBLIC	?push@Stats@@QEAAXN@Z				; Stats::push
PUBLIC	?mean@Stats@@QEBANXZ				; Stats::mean
PUBLIC	?kurtosis@Stats@@QEBANXZ			; Stats::kurtosis
PUBLIC	?only_integers@Stats@@QEBA_NXZ			; Stats::only_integers
PUBLIC	__JustMyCode_Default
PUBLIC	__real@0000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4018000000000000
EXTRN	__imp_floor:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@Stats@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?clear@Stats@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push@Stats@@QEAAXN@Z DD imagerel $LN9
	DD	imagerel $LN9+689
	DD	imagerel $unwind$?push@Stats@@QEAAXN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?mean@Stats@@QEBANXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?mean@Stats@@QEBANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?kurtosis@Stats@@QEBANXZ DD imagerel $LN5
	DD	imagerel $LN5+159
	DD	imagerel $unwind$?kurtosis@Stats@@QEBANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?only_integers@Stats@@QEBA_NXZ DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$?only_integers@Stats@@QEBA_NXZ
pdata	ENDS
;	COMDAT __real@4018000000000000
CONST	SEGMENT
__real@4018000000000000 DQ 04018000000000000r	; 6
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?only_integers@Stats@@QEBA_NXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?kurtosis@Stats@@QEBANXZ DD 035052a01H
	DD	010e3313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?mean@Stats@@QEBANXZ DD 035052a01H
	DD	010e3313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push@Stats@@QEAAXN@Z DD 025053001H
	DD	01142319H
	DD	0700d0033H
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@Stats@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\stats.cpp
;	COMDAT ?only_integers@Stats@@QEBA_NXZ
_TEXT	SEGMENT
result$ = 4
this$ = 256
?only_integers@Stats@@QEBA_NXZ PROC			; Stats::only_integers, COMDAT

; 42   : {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__245B244A_stats@cpp
	call	__CheckForDebuggerJustMyCode

; 43   : 	bool result = false;

	mov	BYTE PTR result$[rbp], 0

; 44   : 	if (only_ints == 0)

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax+40]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	jp	SHORT $LN2@only_integ
	jne	SHORT $LN2@only_integ

; 45   : 	{
; 46   : 		result = true;

	mov	BYTE PTR result$[rbp], 1
$LN2@only_integ:

; 47   : 	}
; 48   : 	return result;

	movzx	eax, BYTE PTR result$[rbp]

; 49   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?only_integers@Stats@@QEBA_NXZ ENDP			; Stats::only_integers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\stats.cpp
;	COMDAT ?kurtosis@Stats@@QEBANXZ
_TEXT	SEGMENT
this$ = 224
?kurtosis@Stats@@QEBANXZ PROC				; Stats::kurtosis, COMDAT

; 37   : {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__245B244A_stats@cpp
	call	__CheckForDebuggerJustMyCode

; 38   : 	return static_cast<double>(n)* m4 / (m2 * m2) - 3.0;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jl	SHORT $LN3@kurtosis
	cvtsi2sd xmm0, rax
	jmp	SHORT $LN4@kurtosis
$LN3@kurtosis:
	mov	rcx, rax
	shr	rcx, 1
	and	rax, 1
	or	rcx, rax
	cvtsi2sd xmm1, rcx
	addsd	xmm1, xmm1
	movaps	xmm0, xmm1
$LN4@kurtosis:
	mov	rax, QWORD PTR this$[rbp]
	mulsd	xmm0, QWORD PTR [rax+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movsd	xmm1, QWORD PTR [rax+16]
	mulsd	xmm1, QWORD PTR [rcx+16]
	divsd	xmm0, xmm1
	subsd	xmm0, QWORD PTR __real@4008000000000000

; 39   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?kurtosis@Stats@@QEBANXZ ENDP				; Stats::kurtosis
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\stats.cpp
;	COMDAT ?mean@Stats@@QEBANXZ
_TEXT	SEGMENT
this$ = 224
?mean@Stats@@QEBANXZ PROC				; Stats::mean, COMDAT

; 32   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__245B244A_stats@cpp
	call	__CheckForDebuggerJustMyCode

; 33   : 	return m1;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax+8]

; 34   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?mean@Stats@@QEBANXZ ENDP				; Stats::mean
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\stats.cpp
;	COMDAT ?push@Stats@@QEAAXN@Z
_TEXT	SEGMENT
delta$ = 8
delta_n$ = 40
delta_n2$ = 72
term1$ = 104
n1$ = 136
tv73 = 344
tv71 = 352
this$ = 400
x$ = 408
?push@Stats@@QEAAXN@Z PROC				; Stats::push, COMDAT

; 5    : {

$LN9:
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 102				; 00000066H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+440]
	lea	rcx, OFFSET FLAT:__245B244A_stats@cpp
	call	__CheckForDebuggerJustMyCode

; 6    : 	double delta, delta_n, delta_n2, term1; 
; 7    : 
; 8    : 	long long n1 = n;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR n1$[rbp], rax

; 9    : 	only_ints += x - std::floor(x);

	movsd	xmm0, QWORD PTR x$[rbp]
	call	QWORD PTR __imp_floor
	movsd	xmm1, QWORD PTR x$[rbp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsd	QWORD PTR tv73[rbp], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax+40]
	movsd	QWORD PTR tv71[rbp], xmm0
	movsd	xmm0, QWORD PTR tv71[rbp]
	addsd	xmm0, QWORD PTR tv73[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movsd	QWORD PTR [rax+40], xmm0

; 10   : 	n++;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	inc	rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax

; 11   : 	delta = x - m1;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR x$[rbp]
	subsd	xmm0, QWORD PTR [rax+8]
	movsd	QWORD PTR delta$[rbp], xmm0

; 12   : 	delta_n = delta / n;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jl	SHORT $LN7@push
	cvtsi2sd xmm0, rax
	jmp	SHORT $LN8@push
$LN7@push:
	mov	rcx, rax
	shr	rcx, 1
	and	rax, 1
	or	rcx, rax
	cvtsi2sd xmm1, rcx
	addsd	xmm1, xmm1
	movaps	xmm0, xmm1
$LN8@push:
	movsd	xmm1, QWORD PTR delta$[rbp]
	divsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsd	QWORD PTR delta_n$[rbp], xmm0

; 13   : 	delta_n2 = delta_n * delta_n;

	movsd	xmm0, QWORD PTR delta_n$[rbp]
	mulsd	xmm0, QWORD PTR delta_n$[rbp]
	movsd	QWORD PTR delta_n2$[rbp], xmm0

; 14   : 	term1 = delta * delta_n * n1;

	movsd	xmm0, QWORD PTR delta$[rbp]
	mulsd	xmm0, QWORD PTR delta_n$[rbp]
	cvtsi2sd xmm1, QWORD PTR n1$[rbp]
	mulsd	xmm0, xmm1
	movsd	QWORD PTR term1$[rbp], xmm0

; 15   : 	m1 += delta_n;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax+8]
	addsd	xmm0, QWORD PTR delta_n$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movsd	QWORD PTR [rax+8], xmm0

; 16   : 	m4 += term1 * delta_n2 * (n * n - 3 * n + 3) + 6 * delta_n2 * m2 - 4 * delta_n * m3;

	movsd	xmm0, QWORD PTR term1$[rbp]
	mulsd	xmm0, QWORD PTR delta_n2$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	imul	rax, QWORD PTR [rcx]
	mov	rcx, QWORD PTR this$[rbp]
	imul	rcx, QWORD PTR [rcx], 3
	sub	rax, rcx
	add	rax, 3
	test	rax, rax
	jl	SHORT $LN5@push
	cvtsi2sd xmm1, rax
	jmp	SHORT $LN6@push
$LN5@push:
	mov	rcx, rax
	shr	rcx, 1
	and	rax, 1
	or	rcx, rax
	cvtsi2sd xmm2, rcx
	addsd	xmm2, xmm2
	movaps	xmm1, xmm2
$LN6@push:
	mulsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@4018000000000000
	mulsd	xmm1, QWORD PTR delta_n2$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mulsd	xmm1, QWORD PTR [rax+16]
	addsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@4010000000000000
	mulsd	xmm1, QWORD PTR delta_n$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mulsd	xmm1, QWORD PTR [rax+24]
	subsd	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm1, QWORD PTR [rax+32]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movsd	QWORD PTR [rax+32], xmm0

; 17   : 	m3 += term1 * delta_n * (n - 2) - 3 * delta_n * m2;

	movsd	xmm0, QWORD PTR term1$[rbp]
	mulsd	xmm0, QWORD PTR delta_n$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 2
	test	rax, rax
	jl	SHORT $LN3@push
	cvtsi2sd xmm1, rax
	jmp	SHORT $LN4@push
$LN3@push:
	mov	rcx, rax
	shr	rcx, 1
	and	rax, 1
	or	rcx, rax
	cvtsi2sd xmm2, rcx
	addsd	xmm2, xmm2
	movaps	xmm1, xmm2
$LN4@push:
	mulsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@4008000000000000
	mulsd	xmm1, QWORD PTR delta_n$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mulsd	xmm1, QWORD PTR [rax+16]
	subsd	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm1, QWORD PTR [rax+24]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movsd	QWORD PTR [rax+24], xmm0

; 18   : 	m2 += term1;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax+16]
	addsd	xmm0, QWORD PTR term1$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movsd	QWORD PTR [rax+16], xmm0

; 19   : }

	lea	rsp, QWORD PTR [rbp+376]
	pop	rdi
	pop	rbp
	ret	0
?push@Stats@@QEAAXN@Z ENDP				; Stats::push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Petr\Desktop\PPR\src\utils\stats.cpp
;	COMDAT ?clear@Stats@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@Stats@@QEAAXXZ PROC				; Stats::clear, COMDAT

; 22   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__245B244A_stats@cpp
	call	__CheckForDebuggerJustMyCode

; 23   : 	m1 = 0;

	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+8], xmm0

; 24   : 	m2 = 0;

	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+16], xmm0

; 25   : 	m3 = 0;

	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+24], xmm0

; 26   : 	m4 = 0;

	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+32], xmm0

; 27   : 	n = 0;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0

; 28   : 	only_ints = 0;

	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+40], xmm0

; 29   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@Stats@@QEAAXXZ ENDP				; Stats::clear
_TEXT	ENDS
END
